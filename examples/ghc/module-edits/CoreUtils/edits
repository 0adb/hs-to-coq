rename type Var.Id    = Core.Var
rename type Var.TyVar = Core.Var

axiomatize module CoreUtils

rename type CoreSyn.Alt = Alt

skip module PprCore
skip module PrimOp
skip module TysPrim
skip module Platform

skip CoreUtils.rhsIsStatic

## needs PrelNames
skip CoreUtils.collectMakeStaticArgs

skip CoreUtils.applyTypeToArgs
skip CoreUtils.exprType
skip CoreUtils.coreAltType
skip CoreUtils.coreAltsType

# mutual recursion
skip CoreUtils.cheapEqExpr'
skip CoreUtils.cheapEqExpr


rewrite forall subst knd,       TyCoRep.substTyUnchecked subst knd = tt
rewrite forall subst tv new_tv, TyCoRep.extendTvSubstWithClone subst tv new_tv = subst
rewrite forall subst ty,        TyCoRep.substTy subst ty = tt

in CoreUtils.dataConInstPat rewrite forall con, DataCon.dataConRepStrictness con = nil
in CoreUtils.dataConInstPat rewrite forall con, DataCon.dataConRepArgTys con = nil
in CoreUtils.dataConInstPat rewrite forall con, DataCon.dataConExTyVars con = @nil unit
in CoreUtils.dataConInstPat rewrite forall x y, TyCoRep.zipTvSubst x y = tt
# in CoreUtils.dataConInstPat rewrite forall x y z, Data.Traversable.mapAccumL x y z = pair univ_subst nil



## 
## needs more from DataCon

skip CoreUtils.dataConInstPat
skip CoreUtils.dataConRepFSInstPat
skip CoreUtils.dataConRepInstPat


##


in CoreUtils.eqExpr rewrite forall env t1 t2 ,  Type.eqTypeX env t1 t2 = true
in CoreUtils.eqExpr rewrite forall env t1 t2 ,  Type.eqCoercionX env t1 t2 = true
in CoreUtils.eqExpr rewrite forall env t1 t2 ,  Core.rnBndrs2 env t1 t2 = env
in CoreUtils.eqExpr termination go deferred
in CoreUtils.eqExpr termination go_alt deferred

in CoreUtils.exprIsCheapX termination go deferred

#
# TODO: translate PrelNames
#
in CoreUtils.exprIsHNFlike rewrite forall id, (Unique.hasKey id PrelNames.absentErrorIdKey) = false


# skip CoreUtils.mkCast
# skip CoreUtils.dataConRepInstPat

## pattern matching is non-exhaustive?
# skip CoreUtils.exprIsHNFlike

# skip CoreUtils.diffUnfold
# skip CoreUtils.diffIdInfo
# skip CoreUtils.diffBinds
# skip CoreUtils.diffExpr
# skip CoreUtils.locBind
