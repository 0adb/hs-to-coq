rename type Var.Id    = Combined.Var
rename type Var.TyVar = Combined.Var

axiomatize module CoreUtils

rename type CoreSyn.Alt = Alt

skip module PprCore
skip module PrimOp
skip module TysPrim
skip module Platform

skip CoreUtils.rhsIsStatic

## needs PrelNames
skip CoreUtils.collectMakeStaticArgs

skip CoreUtils.applyTypeToArgs
skip CoreUtils.exprType
skip CoreUtils.coreAltType
skip CoreUtils.coreAltsType

# skip CoreUtils.mkCast
# skip CoreUtils.dataConInstPat

# skip CoreUtils.dataConRepInstPat

## pattern matching is non-exhaustive?
# skip CoreUtils.exprIsHNFlike

# skip CoreUtils.diffUnfold
# skip CoreUtils.diffIdInfo
# skip CoreUtils.diffBinds
# skip CoreUtils.diffExpr
# skip CoreUtils.locBind

rewrite forall subst knd,       TyCoRep.substTyUnchecked subst knd = tt
rewrite forall subst tv new_tv, TyCoRep.extendTvSubstWithClone subst tv new_tv = subst
rewrite forall subst ty,        TyCoRep.substTy subst ty = tt

in CoreUtils.dataConInstPat rewrite forall con, DataCon.dataConRepStrictness con = nil
in CoreUtils.dataConInstPat rewrite forall con, DataCon.dataConRepArgTys con = nil
in CoreUtils.dataConInstPat rewrite forall con, DataCon.dataConExTyVars con = @nil unit
in CoreUtils.dataConInstPat rewrite forall x y, TyCoRep.zipTvSubst x y = tt
# in CoreUtils.dataConInstPat rewrite forall x y z, Data.Traversable.mapAccumL x y z = pair univ_subst nil

# skip CoreUtils.dataConInstPat