skip UniqFM.pprUniqFM
skip UniqFM.pluralUFM
skip UniqFM.pprUFM

skip module Compiler.Hoopl.Dataflow

# requires Hoopl
skip UniqFM.joinUFM

# requires Data.IntMap.Base.mergeWithKey
# not sure how that translates to map2
skip UniqFM.plusUFM_CD

# need to have set datastructure (Data.IntSet.Base)
skip UniqFM.ufmToSet_Directly

# need to avoid left / right as binding vars
# skip UniqFM.partitionUFM

order UniqFM.Functor__UniqFM UniqFM.Foldable__UniqFM UniqFM.Traversable__UniqFM

add UniqFM Instance Unpeel_UniqFM ele : GHC.Prim.Unpeel (UniqFM ele) (Data.IntMap.Base.IntMap ele) :=
  GHC.Prim.Build_Unpeel _ _ (fun x => match x with | UFM y => y end) UFM.
