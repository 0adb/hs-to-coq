skip pprUniqFM
skip pluralUFM
skip pprUFM

skip module Compiler.Hoopl.Dataflow
skip module Data.IntMap.Base
skip module Data.IntSet.Base


# requires Hoopl
skip joinUFM

# requires Data.IntMap.Base.mergeWithKey
# not sure how that translates to map2
skip plusUFM_CD

# need to have set datastructure (Data.IntSet.Base)
skip ufmToSet_Directly

# need to avoid left / right as binding vars
skip partitionUFM

order instance_GHC_Base_Functor_UniqFM instance_Data_Foldable_Foldable_UniqFM instance_Data_Traversable_Traversable_UniqFM

add UniqFM Instance Unpeel_UniqFM ele : GHC.Prim.Unpeel (UniqFM ele) (Data.IntMap.Base.IntMap ele) :=
  GHC.Prim.Build_Unpeel _ _ (fun x => match x with | Mk_UFM y => y end) Mk_UFM.
