rename type  Var.Id            = Core.Var
rename value Type.tyConAppArgs = Core.tyConAppArgs

# Types currently don't exist
skip CoreSubst.substTy
rewrite forall s c, CoreSubst.substTy s c = tt

# Coercions currently don't exist
skip CoreSubst.substCo
rewrite forall s c, CoreSubst.substCo s c = tt

in CSE.cseExpr rename value CSE.cseBind   = cseBind_rec
in CSE.cseExpr rename value CSE.cse_bind  = cse_bind_rec
in CSE.cseExpr rename value CSE.tryForCSE = tryForCSE_rec
in CSE.cseExpr rename value CSE.cseCase   = cseCase_rec

in CSE.cseBind rename value CSE.cseExpr   = cseExpr_rec
in CSE.cseBind rename value CSE.cse_bind  = cse_bind_rec
in CSE.cseBind rename value CSE.tryForCSE = tryForCSE_rec
in CSE.cseBind rename value CSE.cseCase   = cseCase_rec

in CSE.cse_bind rename value CSE.cseExpr   = cseExpr_rec
in CSE.cse_bind rename value CSE.cseBind   = cseBind_rec
in CSE.cse_bind rename value CSE.tryForCSE = tryForCSE_rec
in CSE.cse_bind rename value CSE.cseCase   = cseCase_rec

in CSE.tryForCSE rename value CSE.cseExpr   = cseExpr_rec
in CSE.tryForCSE rename value CSE.cseBind   = cseBind_rec
in CSE.tryForCSE rename value CSE.cse_bind  = cse_bind_rec
in CSE.tryForCSE rename value CSE.cseCase   = cseCase_rec

in CSE.cseCase rename value CSE.cseExpr   = cseExpr_rec
in CSE.cseCase rename value CSE.cseBind   = cseBind_rec
in CSE.cseCase rename value CSE.cse_bind  = cse_bind_rec
in CSE.cseCase rename value CSE.tryForCSE = tryForCSE_rec

# OK?
rewrite forall x, Core.tyConAppArgs x = nil
