redefine Local Definition instance_forall___GHC_Base_Eq__e____GHC_Base_Eq__l___GHC_Base_Eq___GenLocated_l_e__op_zsze__ {inst_l : Type} {inst_e : Type} `{H : GHC.Base.Eq_ inst_e} `{J : GHC.Base.Eq_ inst_l} : ((GenLocated inst_l inst_e) -> ((GenLocated inst_l inst_e) -> bool)) := fun a b => negb (instance_forall___GHC_Base_Eq__e____GHC_Base_Eq__l___GHC_Base_Eq___GenLocated_l_e__op_zeze__ a b).

redefine Local Definition instance_GHC_Base_Eq__SrcSpan_op_zsze__ : SrcSpan -> (SrcSpan -> bool) :=  fun arg_185__ arg_186__ =>  match arg_185__ , arg_186__ with | a , b => negb (instance_GHC_Base_Eq__SrcSpan_op_zeze__ a b)  end.

redefine Local Definition instance_GHC_Base_Eq__RealSrcSpan_op_zsze__ : RealSrcSpan -> (RealSrcSpan -> bool) := fun arg_176__ arg_177__ =>  match arg_176__ , arg_177__ with | a , b => negb (instance_GHC_Base_Eq__RealSrcSpan_op_zeze__ a b) end.


# orderings
order instance_GHC_Base_Eq__RealSrcLoc instance_GHC_Base_Ord_RealSrcLoc_min instance_GHC_Base_Ord_RealSrcLoc_max instance_GHC_Base_Ord_RealSrcLoc cmpSrcLoc  instance_GHC_Base_Ord_SrcLoc_min instance_GHC_Base_Ord_SrcLoc_max instance_GHC_Base_Eq__SrcLoc instance_GHC_Base_Ord_SrcLoc

order instance_GHC_Base_Ord_SrcSpan rightmost leftmost_smallest

order instance_GHC_Base_Eq__RealSrcSpan  instance_GHC_Base_Eq__SrcSpan_op_zeze__ instance_GHC_Base_Ord_RealSrcSpan instance_GHC_Base_Ord_SrcSpan_op_zlze__ instance_GHC_Base_Ord_SrcSpan_op_zl__ instance_GHC_Base_Ord_SrcSpan_op_zgze__ instance_GHC_Base_Ord_SrcSpan_op_zg__ instance_GHC_Base_Ord_SrcSpan_compare


order instance_forall___GHC_Base_Eq__e____GHC_Base_Eq__l___GHC_Base_Eq___GenLocated_l_e_ instance_forall___GHC_Base_Ord_e____GHC_Base_Ord_l___GHC_Base_Ord__GenLocated_l_e_

order instance_GHC_Base_Functor__GenLocated_l_ instance_Data_Foldable_Foldable__GenLocated_l_ instance_Data_Traversable_Traversable__GenLocated_l_

# character constant
skip advanceSrcLoc

# need Data.OldList.sortBy
skip sortLocated

# partial
skip spans

# Outputtable
skip pprUserRealSpan
skip pprUserSpan

# need Eq (Int * Int) and Ord (Int * Int) instance in base
skip addCLoc
skip combineLocs
skip combineSrcSpans
skip containsSpan
skip combineRealSrcSpans
