skip module GHC.Prim

rename type  GHC.Tuple.() = unit
rename value GHC.Tuple.() = tt

rename type  GHC.Types.[]  = list
rename value GHC.Types.[]  = nil
rename value GHC.Types.:   = cons

rename value GHC.Base.++         = Coq.Init.Datatypes.app
rename value GHC.List.concatMap  = Coq.Lists.List.flat_map
rename value GHC.Base..          = Coq.Program.Basics.compose

rename value GHC.List.foldl      = GHC.Base.foldl
rename value GHC.List.foldl'     = GHC.Base.foldl'

rename value GHC.Magic.oneShot = GHC.Base.oneShot

rename type GHC.Types.Ordering = comparison
rename value GHC.Types.EQ = Eq
rename value GHC.Types.LT = Lt
rename value GHC.Types.GT = Gt

rename type  GHC.Classes.Eq = GHC.Base.Eq_
rename value GHC.Classes.== = GHC.Base.op_zeze__
rename value GHC.Classes./= = GHC.Base.op_zsze__

rename type  GHC.Classes.Ord = GHC.Base.Ord
rename value GHC.Classes.<  = <?
rename value GHC.Classes.<= = <=?
rename value GHC.Classes.>  = >?
rename value GHC.Classes.>= = >=?
rename value GHC.Classes.max = GHC.Base.max
rename value GHC.Classes.min = GHC.Base.min
rename value GHC.Classes.compare = GHC.Base.compare

rename type  GHC.Types.Int  = GHC.Num.Int

rename type  GHC.Types.Bool  = bool
rename value GHC.Types.True  = true
rename value GHC.Types.False = false
rename value GHC.Classes.not   = negb
rename value GHC.Classes.||    = orb
rename value GHC.Classes.&&    = andb

rename type  GHC.Base.Maybe   = option
rename value GHC.Base.Just    = Some
rename value GHC.Base.Nothing = None

rename value GHC.Err.errorWithoutStackTrace = GHC.Base.errorWithoutStackTrace

rename type Data.Either.Either = sum
rename value Data.Either.Right = inr
rename value Data.Either.Left  = inl


rename type GHC.Types.* = Type
rename type GHC.Types.Word = GHC.Num.Word

skip method Monad fail

rename value GHC.Prim.seq  = GHC.Base.seq
rename value op_zlzez3fU__ = op_zlze__

rename value Data.Proxy.Proxy    = Data.Proxy.Mk_Proxy
rename value Data.Monoid.Dual    = Data.Monoid.Mk_Dual
rename value Data.Monoid.Sum     = Data.Monoid.Mk_Sum
rename value Data.Monoid.Product = Data.Monoid.Mk_Product
rename value Data.Monoid.First   = Data.Monoid.Mk_First
rename value Data.Monoid.Last    = Data.Monoid.Mk_Last
rename value Data.Traversable.for = Data.Traversable.for_

rename value getConst = Data.Functor.Const.getConst
rename value Data.Functor.Const = Data.Functor.Const.Mk_Const
