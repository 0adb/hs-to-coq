skip module GHC.Read
skip module GHC.Show

skip instance_forall___GHC_Show_Show_a___GHC_Show_Show__Const_a_b_
skip instance_forall___GHC_Read_Read_a___GHC_Read_Read__Const_a_b_

data kinds Const Type, Type

skip instance_forall___GHC_Base_Monoid_m___GHC_Base_Applicative__Const_m__op_zlztzg__
skip instance_forall___GHC_Base_Monoid_m___GHC_Base_Applicative__Const_m__op_ztzg__

redefine Local Definition instance_forall___GHC_Base_Monoid_m___GHC_Base_Applicative__Const_m__op_zlztzg__ `{_:GHC.Base.Monoid m} :
  forall {a}{b}, ((Const m a) -> ((Const m b) -> (Const m b))) :=
  fun {a} {b} x y => match x with
                  | (Mk_Const x1) => match y with
                     | (Mk_Const x2) => Mk_Const (GHC.Base.mappend x1 x2)
                     end
                  end.
