type  GHC.Tuple.() = unit
value GHC.Tuple.() = tt

type  GHC.Types.[] = list
value GHC.Types.[] = nil
value GHC.Types.:  = ::

value GHC.Classes.<  = <?
value GHC.Classes.<= = <=?
value GHC.Classes.>  = >?
value GHC.Classes.>= = >=?

type  GHC.Types.Bool  = bool
value GHC.Types.True  = true
value GHC.Types.False = false
value GHC.Types.not   = negb
value GHC.Types.||    = orb
value GHC.Types.&&    = andb


type  GHC.Base.Maybe   = option
value GHC.Base.Just    = Some
value GHC.Base.Nothing = None

# This is mostly for PatternGuard, which has Int defined in its preamble.v
type GHC.Types.Int    = Int
value GHC.Num.-       = __op_zm__
